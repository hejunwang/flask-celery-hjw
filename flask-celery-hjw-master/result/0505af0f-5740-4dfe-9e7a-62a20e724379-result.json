{"name": "test_2[14客诉工单 详情-https://test.xlvren.com-/bp/workOrderDetails-get-{\"id\":6}]", "status": "failed", "statusDetails": {"message": "AssertionError: assert -7 == 0\n  +-7\n  -0", "trace": "self = <pytest_pkg.test_case.test_001_case.Test_xlr2 object at 0x7f8dda118a20>, desc = '14客诉工单 详情', url = 'https://test.xlvren.com', add = '/bp/workOrderDetails'\nmethod = 'get', pararm = '{\"id\":6}', token = '27ecc906-a571-457b-a3f7-a5962e2866eb'\n\n    @pytest.mark.run(order=2)\n    @pytest.mark.parametrize('desc,url,add,method,pararm',\n                             get_test_casename('/root/flask-celery-hjw/flask-celery/testcase-data/1.xlsx','Sheet',rows=16,columns=7))\n    def test_2(self,desc,url,add,method,pararm,token):\n        print('^--2--^'*20)\n        tt = []\n        tt.append(url)\n        tt.append(add)\n        _url = ''.join(tt)\n        Log().info('case用例:'+desc)\n        Log().info('地址url：{}'.format(_url))\n        Log().info('token：{}'.format(token))\n    \n    \n        headers = {}\n        headers['Authorization'] = \"Bearer {}\".format(token)\n        headers['Content-Type'] = 'application/json'\n        print('header :{}'.format(headers))\n        print('method :{}'.format(method))\n        print('pararm :{}'.format(pararm))\n    \n        if method =='post':\n            Log().debug('post 请求...')\n    \n            _data = json.loads(pararm)\n            # Log().debug('_data:' + json.dumps(_data))\n            # print(\"post 请求。。。。。\")\n            res = interface.Interface_api(url=_url).post_interface(data=json.dumps(_data),headers=headers)\n            ss = json.loads(res.text)\n            Log().debug('`````````````````````````````````````````````````')\n            # print('测试结果:post,,,{}'.format(ss))\n            assert ss['errorCode'] == 0\n            res.close()\n            print(\"post 请求 结束。。。。。\")\n    \n        elif method=='get':\n            Log().debug('get 请求 ....')\n            _data = json.loads(pararm)\n            # Log().debug('_data:' + json.dumps(_data))\n            res = interface.Interface_api(url=_url).get_interface(params=_data,headers=headers)\n            # print('get request:-->'+res.url)\n            self.ress = res.text\n            ss = json.loads(self.ress)\n            Log().debug('测试结果:get,,,{}'.format(ss))\n>           assert ss[\"errorCode\"] == 0\nE           assert -7 == 0\nE             +-7\nE             -0\n\npytest_pkg/test_case/test_001_case.py:168: AssertionError"}, "attachments": [{"name": "log", "source": "cae62d5f-ce71-422d-932e-2e2bbe004ea2-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "desc", "value": "'14客诉工单 详情'"}, {"name": "url", "value": "'https://test.xlvren.com'"}, {"name": "add", "value": "'/bp/workOrderDetails'"}, {"name": "method", "value": "'get'"}, {"name": "pararm", "value": "'{\"id\":6}'"}], "start": 1623114095160, "stop": 1623114095312, "uuid": "4a5df76d-d1b1-4749-9d89-2e9c88a9e575", "historyId": "ca5ba8482691459c981e656a6aa80af8", "testCaseId": "1ce8cb5fa0636c463dc97388aa9e9680", "fullName": "test_case.test_001_case.Test_xlr2#test_2", "labels": [{"name": "feature", "value": "加购模块"}, {"name": "tag", "value": "run(order=2)"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_001_case"}, {"name": "subSuite", "value": "Test_xlr2"}, {"name": "host", "value": "VM-1-31-centos"}, {"name": "thread", "value": "20999-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_001_case"}]}